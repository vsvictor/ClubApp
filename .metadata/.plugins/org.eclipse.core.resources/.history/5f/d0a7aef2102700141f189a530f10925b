package com.aod.clubapp;

import android.app.ActionBar;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.util.TypedValue;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.LinearLayout;
import android.widget.ListView;

import com.aod.clubapp.communicaton.datamodel.PlaceCategories;

public class PlaceCategorisListActivity extends AuraBaseActivity {
	public static final String TAG = "PlaceCategorisListActivity";
	
	private ListView lv;
	private int actionBarHeight = 0;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.activity_place_categories);
		if(getActionBar() != null){
			getActionBar().setTitle(R.string.menu_places);
		}
			
		lv = (ListView)findViewById(R.id.list);
	
		lv.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				Log.d(TAG, "clicked item in place categoris list list: " + position);
				//position to category id
				PlaceCategories cat = getDataSession().getCategories();
				if(cat != null && cat.getPlaceCategories() != null && position < cat.getPlaceCategories().length) { 
					PlacesListActivity.showPlacesListActivity(cat.getPlaceCategories()[position].getId(), PlaceCategorisListActivity.this);
				}
			}
		});
		// calculate action bar height
		TypedValue tv = new TypedValue();
		if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true)){
		    actionBarHeight = TypedValue.complexToDimensionPixelSize(tv.data,getResources().getDisplayMetrics());
		}
		
		lv.setOnScrollListener(new AbsListView.OnScrollListener() {
			
			int mScrollState = AbsListView.OnScrollListener.SCROLL_STATE_IDLE;
			int callsCnt = 0;
			@Override
			public void onScrollStateChanged(AbsListView view, int scrollState) {
				mScrollState = scrollState;
			}
			
			@Override
			public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
				ActionBar abar = getActionBar();
				if(abar == null)
					return;
				if(visibleItemCount == 0)
					return;
		        if (mScrollState == OnScrollListener.SCROLL_STATE_IDLE && callsCnt > 5)
		            return;
				moveTitleOnScroll(view, firstVisibleItem, visibleItemCount, totalItemCount);
				callsCnt++;
			}
		});			
/*		
		lv.setAfterOverScroll(new Runnable() {				
			@Override
			public void run() {
				View listItem = lv.getChildAt(0);
	            if (listItem == null)
	                return;		                        
	            LinearLayout title = (LinearLayout)listItem.findViewById(R.id.content_part1);		 
	            int topMargin = 0;		 
	            // set the margin.
	            ((ViewGroup.MarginLayoutParams) title.getLayoutParams()).topMargin = topMargin;
	            // request Android to layout again.
	            listItem.requestLayout();					
			}
		});		
*/		
		fillContent();
	}
	
	@Override
	public void onDataServiceConnected() {
		super.onDataServiceConnected();
		fillContent();
		
	}

	@Override
	public void onDataServiceDisConnected() {
	}

	private void fillContent() {
		if(getDataSession() == null || getDataSession().getCategories() == null)
			return;
		PlaceCategories cat = getDataSession().getCategories();
		PlaceCategoriesAdapter adapter = new PlaceCategoriesAdapter(this, cat.getPlaceCategories());
		lv.setAdapter(adapter);
	}
	
    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {    	    	
    	return true;
    }
	
	@Override
	public boolean onQueryTextSubmit(String query) {
		Log.d(TAG, "searching for:" + query);
		if(!TextUtils.isEmpty(query)){
			PlacesListActivity.showPlacesListActivity(query, this);
		}else {
			PlacesListActivity.showPlacesListActivity("", this);
		}
		return true;
	}

	public void moveTitleOnScroll(AbsListView view, int firstVisibleItem, int visibleCount, int totalItemCount) {
	actionBarHeight = 0;
        for (int i=0; i < visibleCount; i++) {
            View listItem = lv.getChildAt(i);
            if (listItem == null)
                break;
                        
            LinearLayout title = (LinearLayout)listItem.findViewById(R.id.content_part1);
 
            int topMargin = 0;
            if (i == 0) {
                int top = listItem.getTop();
                int height = listItem.getHeight();
 
                // if top is negative, the list item has scrolled up.
                // if the title view falls within the container's visible portion,
                //     set the top margin to be the (inverse) scrolled amount of the container.
                // else
                //     set the top margin to be the difference between the heights.
                if (top < 0){
                	// topMargin = title.getHeight() < (top + height) ? -top : (height - title.getHeight());
                    topMargin = title.getHeight() < (top + height - actionBarHeight) ? (-top + actionBarHeight) : (height - title.getHeight());
                } else {
                	if(actionBarHeight < top){
	                	topMargin = 0;
	                } else {
	                	topMargin = actionBarHeight - top;
	                }
                }
            }
            if(i == 1){
            	int top = listItem.getTop();
                int height = listItem.getHeight();
                if (top > 0){
	                if(actionBarHeight < top){
	                	topMargin = 0;
	                } else {
	                	topMargin = actionBarHeight - top;
	                }
                }
            }
            if(listItem.getBottom() < 0){
            	topMargin = 0;
            }
            // set the margin.
            ((ViewGroup.MarginLayoutParams) title.getLayoutParams()).topMargin = topMargin;
 
            // request Android to layout again.
            listItem.requestLayout();
        }
	}
	
}
